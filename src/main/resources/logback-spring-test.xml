<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!-- 获取properties中的log地址 -->
    <springProperty scope="context" name="LOG_HOME" source="logging.file.path" defaultValue="D:\2\logs"/>
    <!-- 文件名称前缀 -->
    <property name="APP_NAME" value="xmz" />

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--
            格式化输出：
            %d表示日期，
            %thread表示线程名，
            %-5level：级别从左显示5个字符宽度（就是不够5个字符也要凑齐5个字符的宽度，为了让每一行显示的level都要对齐）
            %logger{50}：表示logger名字最长50个字符，否则按照句点分割。
            %msg：日志消息，%n是换行符
            -->
        </encoder>
    </appender>


    <!-- 设置分割 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 设置按尺寸和时间（同时满足）分割 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按照上面的LOG_HOME和APP_NAME为路径和文件名，每日生成 -->
            <fileNamePattern>${LOG_HOME}/${APP_NAME}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!-- 每个文件最多 20MB，保留 10 天的历史记录，但最多 3GB -->
            <maxFileSize>20MB</maxFileSize>
            <maxHistory>10</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--
            格式化输出：
            %d表示日期，
            %thread表示线程名，
            %-5level：级别从左显示5个字符宽度（就是不够5个字符也要凑齐5个字符的宽度，为了让每一行显示的level都要对齐）
            %logger{50}：表示logger名字最长50个字符，否则按照句点分割。
            %msg：日志消息，%n是换行符
            -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}: %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE" />
    </root>

</configuration>
